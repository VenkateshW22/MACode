version: '3.8'

services:
  # Order Service Database
  order-db:
    image: postgres:15
    container_name: order-db
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d order_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Payment Service Database
  payment-db:
    image: postgres:15
    container_name: payment-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: payment_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d payment_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Shipping Service Database
  shipping-db:
    image: postgres:15
    container_name: shipping-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shipping_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d shipping_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 10